#!/sbin/openrc-run
# Copyright (c) 2007-2021 The Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

description="Loads AppArmor security profiles"
APPARMOR_FUNCTIONS="/lib/apparmor/rc.apparmor.functions"

depend() {
	# Needs local filesystems to access profiles and the procfs for kernel info.
	need localmount procfs
	# Should start after modules are loaded and before most services.
	after modules
	before local
	provide apparmor
}

# Helper function to check if we are in a container that should not load policy.
# (This mirrors the Sysv script).
_is_unprivileged_container() {
	# The presence of /.dockerenv or specific cgroup paths are reliable indicators.
	if [ -f /.dockerenv ] || grep -q -E '/docker|/lxc' /proc/1/cgroup; then
		# is_container_with_internal_policy is a shell function from the
		# sourced apparmor library that checks for specific privileged containers.
		if ! is_container_with_internal_policy; then
			return 0
		fi
	fi
	return 1
}

start() {
	# Source the AppArmor function library, which contains the core logic.
	if [ ! -f "${APPARMOR_FUNCTIONS}" ]; then
		eerror "AppArmor function library not found at ${APPARMOR_FUNCTIONS}"
		return 1
	fi
	# shellcheck source=/dev/null
	. "${APPARMOR_FUNCTIONS}"

	if _is_unprivileged_container; then
		einfo "Not starting AppArmor in this container."
		return 0
	fi
	
	# The apparmor_start function comes from the sourced library.
	apparmor_start
}

stop() {
	# This is a no-op by design, same as the original script.
	# Unloading profiles can leave running processes in an insecure state.
	einfo "Leaving AppArmor profiles loaded."
	ewarn "To tear down all profiles, run 'aa-teardown' manually."
	return 0
}

reload() {
	# Source the function library.
	if [ ! -f "${APPARMOR_FUNCTIONS}" ]; then
		eerror "AppArmor function library not found at ${APPARMOR_FUNCTIONS}"
		return 1
	fi
	# shellcheck source=/dev/null
	. "${APPARMOR_FUNCTIONS}"

	if _is_unprivileged_container; then
		einfo "Not reloading AppArmor in this container."
		return 0
	fi

	# The apparmor_restart function reloads all profiles.
	apparmor_restart
}

status() {
	# Source the function library.
	if [ ! -f "${APPARMOR_FUNCTIONS}" ]; then
		eerror "AppArmor function library not found at ${APPARMOR_FUNCTIONS}"
		return 1
	fi
	# shellcheck source=/dev/null
	. "${APPARMOR_FUNCTIONS}"

	# The apparmor_status function checks the status.
	apparmor_status
}
